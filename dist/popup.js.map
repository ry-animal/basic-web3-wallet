{"version":3,"file":"popup.js","mappings":";;;;;AAAa;AACb;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA,CAAC","sources":["webpack://basic-web3-wallet/./src/popup.ts"],"sourcesContent":["\"use strict\";\nclass PopupUI {\n    async initialize() {\n        console.log('PopupUI initializing...'); // Debug log\n        const createButton = document.getElementById('createWallet');\n        const unlockButton = document.getElementById('unlockWallet');\n        if (!createButton || !unlockButton) {\n            console.error('Could not find buttons!'); // Debug log\n            return;\n        }\n        createButton.addEventListener('click', () => {\n            console.log('Create wallet clicked'); // Debug log\n            const password = prompt('Enter a password for your wallet:');\n            if (password) {\n                this.createWallet(password);\n            }\n        });\n        unlockButton.addEventListener('click', () => {\n            console.log('Unlock wallet clicked'); // Debug log\n            const password = prompt('Enter your wallet password:');\n            if (password) {\n                this.unlockWallet(password);\n            }\n        });\n    }\n    async createWallet(password) {\n        try {\n            const response = await chrome.runtime.sendMessage({\n                type: 'CREATE_WALLET',\n                password\n            });\n            if (response.success) {\n                this.showWalletView(response.address);\n            }\n            else {\n                alert('Failed to create wallet: ' + response.error);\n            }\n        }\n        catch (error) {\n            console.error('Create wallet error:', error); // Debug log\n            alert('Error creating wallet');\n        }\n    }\n    async unlockWallet(password) {\n        try {\n            const response = await chrome.runtime.sendMessage({\n                type: 'UNLOCK_WALLET',\n                password\n            });\n            if (response.success) {\n                this.showWalletView(response.address);\n            }\n            else {\n                alert('Failed to unlock wallet: ' + response.error);\n            }\n        }\n        catch (error) {\n            console.error('Unlock wallet error:', error); // Debug log\n            alert('Error unlocking wallet');\n        }\n    }\n    showWalletView(address) {\n        console.log('Showing wallet view for address:', address); // Debug log\n        const welcomeScreen = document.getElementById('welcome');\n        const walletScreen = document.getElementById('walletView');\n        const addressElement = document.getElementById('address');\n        if (!welcomeScreen || !walletScreen || !addressElement) {\n            console.error('Missing UI elements'); // Debug log\n            return;\n        }\n        welcomeScreen.classList.add('hidden');\n        walletScreen.classList.remove('hidden');\n        addressElement.textContent = address;\n    }\n}\n// Wait for DOM to be ready\ndocument.addEventListener('DOMContentLoaded', () => {\n    console.log('DOM loaded, initializing PopupUI'); // Debug log\n    new PopupUI().initialize();\n});\n"],"names":[],"sourceRoot":""}